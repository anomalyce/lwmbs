name: windows test

on:
  workflow_dispatch:
  push:
  schedule:
    - cron:  '33 4 * * *'

jobs:
  build:
    name: PHP ${{ matrix.php-version }} ${{ matrix.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php-version: "8.1"
            arch: 'x64'
          - php-version: "8.0"
            arch: 'x64'
          - php-version: "8.1" # but 8.2 dev
            arch: 'arm64'
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Calc sources hash
        id: src_hash
        shell: pwsh
        run: |
          ${env:GITHUB_TOKEN} = "${{ secrets.GITHUB_TOKEN }}"
          Write-Host -NoNewline "::set-output name=hash::"
          php fetch_source.php ./src.json "${{ matrix.php-version }}" --hash
          Write-Host ""

      - name: Cache libraries
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            build/src
            build/downloads
            build/deps
          key: windows-v2-${{ matrix.arch }}-${{ steps.src_hash.outputs.hash }}

      - name: Prepare tools and sources
        id: prepare
        shell: pwsh
        run: |
          ${env:GITHUB_TOKEN} = "${{ secrets.GITHUB_TOKEN }}"
          New-Item -ItemType Container -Force C:\tools\php-sdk-binary-tools
          New-Item -ItemType Container -Force build
          Set-Location build
          # prepare nasm
          Invoke-WebRequest -Uri "https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip" `
            -OutFile "nasm-2.15.05-win64.zip"
          unzip nasm-2.15.05-win64.zip
          Move-Item nasm-2.15.05/*.exe C:\Windows\system32
          Move-Item nasm-2.15.05/rdoff/*.exe C:\Windows\system32
          # prepare binary sdk
          git clone --depth 1 --single-branch --branch master https://github.com/php/php-sdk-binary-tools C:\tools\php-sdk-binary-tools
          # fetch source
          php ${env:GITHUB_WORKSPACE}/fetch_source.php ${env:GITHUB_WORKSPACE}/src.json ${{ matrix.php-version }} --shallow-clone
          Set-Location src\php-src
          if ("${{ matrix.arch }}" -Eq "arm64") {
            git checkout HEAD .
            git remote add dixyes https://github.com/dixyes/php-src
            git fetch dixyes win_arm64 --depth 1
            git checkout dixyes/win_arm64
            Get-Content -Raw sapi\micro\patches\cli_checks_81.patch | patch -p1
            Get-Content -Raw sapi\micro\patches\static_opcache_81.patch | patch -p1
            Get-Content -Raw sapi\micro\patches\static_extensions_win32.patch | patch -p1
            Get-Content -Raw sapi\micro\patches\vcruntime140_80.patch | patch -p1
            Get-Content -Raw sapi\micro\patches\win32_80.patch | patch -p1
            Get-Content -Raw sapi\micro\patches\zend_stream.patch | patch -p1
          }
          # only for Windows cli, so we patch it here
          Get-Content -Raw sapi\micro\patches\cli_static.patch | patch -p1

      - name: Prepare libraries
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: build
        shell: pwsh
        run: |
          ${env:GITHUB_TOKEN} = "${{ secrets.GITHUB_TOKEN }}"
          php ${env:GITHUB_WORKSPACE}/build_libs.php -phpBinarySDKDir=C:\tools\php-sdk-binary-tools --vsVer=17 --arch=${{ matrix.arch }}

      - name: Build micro
        id: micro
        shell: pwsh
        working-directory: build
        continue-on-error: true
        run: |
          ${env:GITHUB_TOKEN} = "${{ secrets.GITHUB_TOKEN }}"
          php ${env:GITHUB_WORKSPACE}/build_micro.php -phpBinarySDKDir=C:\tools\php-sdk-binary-tools --vsVer=17 --arch=${{ matrix.arch }}
          cp src/php-src/${{ matrix.arch }}/Release_TS/micro.sfx ..

      - name: Upload artifact for micro
        if: steps.micro.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: micro_${{ matrix.php-version }}_${{ matrix.arch }}_${{ steps.src_hash.outputs.hash }}
          path: |
            micro.sfx

      - name: Build cli
        id: cli
        shell: pwsh
        working-directory: build
        continue-on-error: true
        run: |
          ${env:GITHUB_TOKEN} = "${{ secrets.GITHUB_TOKEN }}"
          php ${env:GITHUB_WORKSPACE}/build_cli.php -phpBinarySDKDir=C:\tools\php-sdk-binary-tools --vsVer=17 --arch=${{ matrix.arch }}
          cp src/php-src/${{ matrix.arch }}/Release_TS/php.exe ..

      - name: Upload artifact for cli
        if: steps.cli.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: cli_${{ matrix.php-version }}_${{ matrix.arch }}_${{ steps.src_hash.outputs.hash }}
          path: |
            php.exe

      - name: Fail if anything failed
        if: steps.micro.outcome != 'success' || steps.cli.outcome != 'success'
        shell: cmd
        run: |
          exit /b 1

      - name: Remove php src to avoid cache
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force build\src\php-src
